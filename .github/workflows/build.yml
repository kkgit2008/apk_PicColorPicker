name: Build current repo

### To build from subfolder,just modify the 'ANDROID_DIR'

on:
  push:
    ### Start build only on these branches
    branches: [ "main","master" ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/*.yml'
  workflow_dispatch: { }
  ### Support manual build in 'Actions/workflow'

env:
  ANDROID_DIR: .
  ### Build from project root (when 'app' folder is just at project root)
  # ANDROID_DIR: android
  ### Build from 'android' folder (when 'app' folder is in 'project/android' folder), modify it as you need.

permissions:
  contents: write

jobs:
  build_apk:
    strategy:
      matrix:
        build_type: ['debug', 'release']
        # build_type: ['debug']
    name: Build APK
    runs-on: ubuntu-latest
    steps:

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle and build outputs
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ env.ANDROID_DIR }}/app/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle', '**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Increase Gradle memory
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          printf "\norg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g\n" >> gradle.properties

      - name: Make gradlew executable
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew

      - name: Set Gradle memory (support existing/missing config)
        run: |
          if grep -q "^org.gradle.jvmargs=" gradle.properties; then
            # 存在则替换原有配置
            sed -i 's/^org.gradle.jvmargs=.*/org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g/' gradle.properties
          else
            # 不存在则在文件末尾安全新增（加换行避免拼接）
            echo -e "\norg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g" >> gradle.properties
          fi
          # 输出修改后的文件内容到日志
          echo "=== Modified gradle.properties content ==="
          cat gradle.properties

      - name: Build ${{ matrix.build_type }} APK
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          build_type=${{ matrix.build_type }}
          ./gradlew assemble${build_type^}

      - name: Show apk paths
        run: |
            echo ">>${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}:"
            ls -la ${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}

      - name: Upload ${{ matrix.build_type }} APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.build_type }}-${{ steps.set_sha.outputs.short_sha }}
          path: ${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}/*.apk
